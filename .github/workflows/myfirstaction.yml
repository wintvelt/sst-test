name: deployment workflow
on: [push]
jobs:
  publish-dependencies:
    if: (endsWith(github.ref, '/master') || endsWith(github.ref, '/dev'))
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Read package.json
        id: package
        uses: juliangruber/read-file-action@v1
        with:
          path: ./package.json
      - name: echo ref just in case
        run: echo '${{ github.ref }}'
      - name: set AWS credentials from env
        run: |
          mkdir ~/.aws
        # echo secrets.AWS_ACCESS_KEY_ID
        # echo secrets.AWS_SECRET_ACCESS_KEY
        # touch ~/.aws/config
        # echo [default] >> ~/.aws/config
        # touch ~/.aws/credentials
        # echo [default] >> ~/.aws/credentials
        # echo aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }} >> ~/.aws/credentials
        # echo aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }} >> ~/.aws/credentials
      - name: if on dev - Install and deploy
        if: endsWith(github.ref, '/dev')
        run: |
          npm install
          echo "I am placeholder"
          npx sst deploy --stage dev
        # run: echo "${{ steps.package.outputs.content }}"
        # TODO: hier moet een of ander CURL statement komen
        # Inclusief header uit env voor validatie
      - name: if on dev - Publish dependencies
        if: endsWith(github.ref, '/dev')
        uses: indiesdev/curl@v1
        with:
          url: https://6klsawe709.execute-api.eu-central-1.amazonaws.com
          method: PUT
          headers: '{ "Authorization": "Basic the-most-important-rule-in-life-is-not-to-take-yourself-too-seriously" }'
          body: '{ "name": "Package name", "stage": "dev", pack: "${{ steps.package.outputs.content }}" }'
      - name: if on master - Install and deploy
        if: endsWith(github.ref, '/master')
        run: |
          npm install
          echo "I am placeholder"
          npx sst deploy --stage prod
        # run: echo "${{ steps.package.outputs.content }}"
        # TODO: hier moet een of ander CURL statement komen