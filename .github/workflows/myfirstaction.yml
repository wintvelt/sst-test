name: deployment workflow
on: [push]
jobs:
  publish-dependencies:
    if: (endsWith(github.ref, '/master') || endsWith(github.ref, '/dev'))
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      SECRET_PUBLISH_TOKEN: ${{ secrets.SECRET_PUBLISH_TOKEN }}
      DEV_PUBLISH_ENDPOINT: https://6klsawe709.execute-api.eu-central-1.amazonaws.com
      PROD_PUBLISH_ENDPOINT: https://urhe9nipda.execute-api.eu-central-1.amazonaws.com
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Read package.json
        id: package
        uses: juliangruber/read-file-action@v1
        with:
          path: ./package.json
      - name: set env vars for deployment
        run: |
          if [[ ${{ github.ref }} =~ '/dev' ]]; then
            echo "we are on DEV branch"
            echo "DEPLOY=true" >> $GITHUB_ENV
            echo "STAGE=dev" >> $GITHUB_ENV
            echo "PUBLISH_ENDPOINT=${{ env.DEV_PUBLISH_ENDPOINT }}" >> $GITHUB_ENV
          else 
            if [[ ${{ github.ref }} =~ '/master' ]]; then
              echo "we are on MASTER branch"
              echo "DEPLOY=true" >> $GITHUB_ENV
              echo "STAGE=prod" >> $GITHUB_ENV
              echo "PUBLISH_ENDPOINT=${{ env.PROD_PUBLISH_ENDPOINT }}" >> $GITHUB_ENV
            else
              echo "we are on another branch"
              echo "DEPLOY=false" >> $GITHUB_ENV
            fi
          fi
      - name: If on master or dev - Install and deploy
        if: env.DEPLOY == 'true'
        run: |
          npm install
          npx sst deploy --stage ${{ env.STAGE }}
      - name: if on mater or dev - Publish dependencies
        if: env.DEPLOY == 'true'
        uses: indiesdev/curl@v1
        with:
          url: ${{ env.PUBLISH_ENDPOINT }}
          method: PUT
          headers: '{ "Content-Type": "application/json" }'
          body: '{ 
            "ownerName": "${{ github.repository }}", 
            "stage": "${{ env.STAGE }}", 
            "pack": ${{ steps.package.outputs.content }},
            "AuthToken": "Basic ${{ secrets.SECRET_PUBLISH_TOKEN }}" 
            }'