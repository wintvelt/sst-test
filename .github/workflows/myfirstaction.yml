name: deployment workflow
on: [push]
jobs:
  publish-dependencies:
    if: (endsWith(github.ref, '/master') || endsWith(github.ref, '/dev'))
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      SECRET_PUBLISH_TOKEN: ${{ secrets.SECRET_PUBLISH_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      REPO: ${{ github.repository }}
      PROD_PUBLISH_ENDPOINT: https://urhe9nipda.execute-api.eu-central-1.amazonaws.com
      DEV_PUBLISH_ENDPOINT: https://6klsawe709.execute-api.eu-central-1.amazonaws.com
      DEV_QUEUE_ENDPOINT: https://sqs.eu-central-1.amazonaws.com/899888592127/dev-sst-test-dependencyQueue.fifo
      NPM_FOLDER: npm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          registry-url: https://registry.npmjs.org/
      - name: Read package.json
        id: package
        uses: juliangruber/read-file-action@v1
        with:
          path: ./package.json
      - name: set env vars for deployment
        run: |
          if [[ ${{ github.ref }} =~ '/dev' ]]; then
            echo "we are on DEV branch"
            echo "DEPLOY=true" >> $GITHUB_ENV
            echo "STAGE=dev" >> $GITHUB_ENV
            echo "PUBLISH_ENDPOINT=${{ env.DEV_PUBLISH_ENDPOINT }}" >> $GITHUB_ENV
          else 
            if [[ ${{ github.ref }} =~ '/master' ]]; then
              echo "we are on MASTER branch"
              echo "DEPLOY=true" >> $GITHUB_ENV
              echo "STAGE=prod" >> $GITHUB_ENV
              echo "PUBLISH_ENDPOINT=${{ env.PROD_PUBLISH_ENDPOINT }}" >> $GITHUB_ENV
            else
              echo "we are on another branch"
              echo "DEPLOY=false" >> $GITHUB_ENV
            fi
          fi
          if test -e "${{ env.NPM_FOLDER }}"; then
            echo "NPM_EXISTS=true" >> $GITHUB_ENV
            echo "npm folder exists"
          else
            echo "NPM_EXISTS=false" >> $GITHUB_ENV
            echo "no npm folder here"
          fi
      - name: install and run tests
        run: |
          npm install
          npx sst test
      - name: If on master or dev - deploy
        if: env.DEPLOY == 'true'
        run: |
          if [[ ${{ env.NPM_EXISTS }} =~ 'true' ]]; then
            npx sst deploy --stage ${{ env.STAGE }} --outputs-file ./npm/${{ env.STAGE }}-stack-output.json
            echo "saving stack output for ${{ env.stage }} in npm root"
          else
            npx sst deploy --stage ${{ env.STAGE }}
            echo "just deploy stack, no npm folder, so output not saved"
      - name: if on master or dev - Publish dependencies
        if: env.DEPLOY == 'true'
        uses: indiesdev/curl@v1
        with:
          url: ${{ env.PUBLISH_ENDPOINT }}
          method: PUT
          headers: '{ "Content-Type": "application/json" }'
          body: '{ 
            "ownerName": "${{ github.repository }}", 
            "stage": "${{ env.STAGE }}", 
            "pack": ${{ steps.package.outputs.content }},
            "authToken": "Basic ${{ secrets.SECRET_PUBLISH_TOKEN }}" 
            }'
          timeout: 5000
      - name: if we deploy and npm exists - bump npm patch version and publish
        if: (env.NPM_EXISTS == 'true' && env.STAGE == 'prod')
        env:
          NODE_AUTH_TOKEN: ${{ env.NPM_TOKEN }}
        run: |
          cd npm
          npm version patch
          npm publish --access=public